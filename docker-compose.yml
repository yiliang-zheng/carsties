services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
  auction-svc:
    image: yiliangzheng0729/carsties-auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/WebApi/Dockerfile
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;User ID=postgres;Password=postgrespw;Database=auctions
      - IdentityService__Authority=http://identity-svc:8080
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:8080
    ports:
      - 7001:8080
      - 7777:7777
    depends_on:
      - postgres
      - rabbitmq
  bids-svc:
    image: yiliangzheng0729/carsties-bids-svc:latest
    build:
      context: .
      dockerfile: src/BidService/WebApi/Dockerfile
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;User ID=postgres;Password=postgrespw;Database=bids
      - IdentityService__Authority=http://identity-svc:8080
      - GrpcAuction=http://auction-svc:7777
    ports:
      - 7003:8080
    depends_on:
      - postgres
      - rabbitmq
  notification-svc:
    image: yiliangzheng0729/carsties-notification-svc:latest
    build:
      context: .
      dockerfile: src/NotificationService/Hub/Dockerfile
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
    ports:
      - 7004:8080
    depends_on:
      - rabbitmq
  search-svc:
    image: yiliangzheng0729/carsties-search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/WebApi/Dockerfile
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongo
      - AuctionServiceUrl=http://auction-svc:8080
    ports:
      - 7002:8080
    depends_on:
      - mongo
      - rabbitmq
  identity-svc:
    image: yiliangzheng0729/carsties-identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Web/Dockerfile
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;User ID=postgres;Password=postgrespw;Database=identity
      - IssuerUrl=https://id.carsties.com
      - RedirectUris__Clients__NextApp=https://app.carsties.com
      - VIRTUAL_HOST=id.carsties.com
      - VIRTUAL_PORT=8080          
    depends_on:
      - postgres

  gateway-svc:
    image: yiliangzheng0729/carsties-gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Web/Dockerfile
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:8080
      - VIRTUAL_HOST=api.carsties.com
      - ClientApp=https://app.carsties.com
      - VIRTUAL_PORT=8080          
      
  state-machine-svc:
    image: yiliangzheng0729/carsties-state-machine-svc:latest
    build:
      context: .
      dockerfile: src/StateMachine/SagaOrchestration/Dockerfile
    restart: unless-stopped
    environment:
      - DOTNET_ENVIRONMENT=Development
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;User ID=postgres;Password=postgrespw;Database=stateMachines
    depends_on:
      - rabbitmq
      - postgres
  web-app:
    image: yiliangzheng0729/carsties-web-app:latest
    build: 
      context: .
      dockerfile: frontend/web-app/Dockerfile        
    environment:
      - AUTH_URL=https://app.carsties.com
      - AUTH_URL_INTERNAL=http://web-app:3000
      - AUTH_SECRET=ajCMxIGFuY0SdA4p/nnb5VxylGjqCDqtowW1eRPoiUw=
      - BACKEND_URL=http://gateway-svc:8080/
      - IDENTITY_SERVER_URL=https://id.carsties.com
      - IDENTITY_SERVER_URL_INTERNAL=http://identity-svc:8080
      - IDENTITY_SERVER_CLIENT_ID=nextApp
      - IDENTITY_SERVER_ClIENT_SECRET=secret
      - SIGNALR_URL=https://api.carsties.com/notifications
      - SERVER_URL=https://app.carsties.com
      - VIRTUAL_HOST=app.carsties.com      
      - VIRTUAL_PORT=3000      

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./infrastructure/devcerts:/etc/nginx/certs      

volumes:
  pgdata:
  mongodata:
  rabbitmqdata:  
